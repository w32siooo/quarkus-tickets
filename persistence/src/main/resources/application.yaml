quarkus:
  application:
    name: persistence
    http:
      port: 8086
      test-port: 18082
      test-timeout: 10s
  http:
    access-log:
      pattern: "...traceId=%{X,traceId} spanId=%{X,spanId}"
  opentelemetry:
    enabled: true
    tracer:
      exporter:
        otlp:
          endpoint: http://localhost:4317
          timeout: 1000ms
          insecure: true
  datasource:
    db-kind: postgresql
    username: postgres
    password: postgres
    reactive:
      url: vertx-reactive:postgresql://localhost/microservices
    devservices:
      enabled: false
    ddl-auto: update
  swagger-ui:
    always-include: 'true'
    theme: original
  log:
    metrics:
      enabled: 'true'
    console:
      format: '%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n'
  hibernate-orm:
    database:
      generation: update
      log:
        sql: false
    # load-script : import.sql
'%dev':
  kafka:
    producer:
      retry-count: '3'
    bootstrap:
      servers: localhost:9093
  quarkus:
    http:
      port: 8086
mp:
  messaging:
    outgoing:
      event-store-out:
        topic: event-store
        key:
          serializer: org.apache.kafka.common.serialization.StringSerializer
        connector: smallrye-kafka
        enable:
          auto:
            commit: 'false'
        value:
          serializer: org.apache.kafka.common.serialization.ByteArraySerializer
        group:
          id: tickets
    incoming:
      event-store-in:
        value:
          deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
        topic: event-store
        key:
          deserializer: org.apache.kafka.common.serialization.StringDeserializer
        connector: smallrye-kafka
  http:
    port: 8086
    test-port: 18082
    test-timeout: 10s
  mongodb:
    application-name: microservices
    credentials:
      password: admin
      username: admin
smallrye:
  faulttolerance:
    mp-compatibility: 'true'

'%test':
    quarkus:
      opentelemetry:
        tracer:
          enabled: false
      datasource:
        db-kind: postgresql
        username: postgres
        password: postgres
        reactive:
          url: vertx-reactive:postgresql://localhost:5433/microservices
        devservices:
          enabled: true
          port: 5433
          db-name: microservices
      kafka:
        devservices:
          enabled: true
          port: 9093
          service-name: shared-kafka
